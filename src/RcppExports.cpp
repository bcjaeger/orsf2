// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// coxph_scale_exported
List coxph_scale_exported(NumericMatrix& x_, NumericVector& w_);
RcppExport SEXP _aorsf_coxph_scale_exported(SEXP x_SEXP, SEXP w_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    rcpp_result_gen = Rcpp::wrap(coxph_scale_exported(x_, w_));
    return rcpp_result_gen;
END_RCPP
}
// coxph_fit_exported
List coxph_fit_exported(NumericMatrix& x_, NumericMatrix& y_, NumericVector& w_, int method, double cph_eps, int cph_iter_max);
RcppExport SEXP _aorsf_coxph_fit_exported(SEXP x_SEXP, SEXP y_SEXP, SEXP w_SEXP, SEXP methodSEXP, SEXP cph_epsSEXP, SEXP cph_iter_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double >::type cph_eps(cph_epsSEXP);
    Rcpp::traits::input_parameter< int >::type cph_iter_max(cph_iter_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(coxph_fit_exported(x_, y_, w_, method, cph_eps, cph_iter_max));
    return rcpp_result_gen;
END_RCPP
}
// lrt_multi_exported
List lrt_multi_exported(NumericMatrix& y_, NumericVector& w_, NumericVector& XB_, int n_split_, double split_min_stat, double leaf_min_events, double leaf_min_obs);
RcppExport SEXP _aorsf_lrt_multi_exported(SEXP y_SEXP, SEXP w_SEXP, SEXP XB_SEXP, SEXP n_split_SEXP, SEXP split_min_statSEXP, SEXP leaf_min_eventsSEXP, SEXP leaf_min_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w_(w_SEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type XB_(XB_SEXP);
    Rcpp::traits::input_parameter< int >::type n_split_(n_split_SEXP);
    Rcpp::traits::input_parameter< double >::type split_min_stat(split_min_statSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_min_events(leaf_min_eventsSEXP);
    Rcpp::traits::input_parameter< double >::type leaf_min_obs(leaf_min_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(lrt_multi_exported(y_, w_, XB_, n_split_, split_min_stat, leaf_min_events, leaf_min_obs));
    return rcpp_result_gen;
END_RCPP
}
// orsf_cpp
List orsf_cpp(arma::mat& x, arma::mat& y, arma::vec& w, int vi, int sr, int pt, bool oobag_pred);
RcppExport SEXP _aorsf_orsf_cpp(SEXP xSEXP, SEXP ySEXP, SEXP wSEXP, SEXP viSEXP, SEXP srSEXP, SEXP ptSEXP, SEXP oobag_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type vi(viSEXP);
    Rcpp::traits::input_parameter< int >::type sr(srSEXP);
    Rcpp::traits::input_parameter< int >::type pt(ptSEXP);
    Rcpp::traits::input_parameter< bool >::type oobag_pred(oobag_predSEXP);
    rcpp_result_gen = Rcpp::wrap(orsf_cpp(x, y, w, vi, sr, pt, oobag_pred));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_aorsf_coxph_scale_exported", (DL_FUNC) &_aorsf_coxph_scale_exported, 2},
    {"_aorsf_coxph_fit_exported", (DL_FUNC) &_aorsf_coxph_fit_exported, 6},
    {"_aorsf_lrt_multi_exported", (DL_FUNC) &_aorsf_lrt_multi_exported, 7},
    {"_aorsf_orsf_cpp", (DL_FUNC) &_aorsf_orsf_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_aorsf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
